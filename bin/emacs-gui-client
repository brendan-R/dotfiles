#!/bin/bash

# Plagiarized from http://mjwall.com/blog/2013/10/04/how-i-use-emacs/
#
# Modified slightly; uses emacsclient25 specifically
#
# emacsclient options for reference
# -a "" starts emacs daemon and reattaches
# -c creates a new frame
# -n returns control back to the terminal


# Open a GUI version of Emacs. If there's already one going, open the file in
# that. If it's minimized, focus that window (or 'frame', in Emacs-speak)


# If the result is greater than one, the Emacs is already running,
# somewhere!
#
# Number of current visible frames (Emacs daemon always has a visible frame
# called F1)
emacs_visible_frames() {
    emacsclient25 -a "" -e '(length (visible-frame-list))'
}

change_focus() {
    emacsclient25 -n -e "(select-frame-set-input-focus (selected-frame))" > \
                  /dev/null
}

# If there's no Emacs server, start one. If there already is one, then focus
# it
test "$(emacs_visible_frames)" -eq "1" && change_focus

# If you need
if [ "$(emacs_visible_frames)" -lt  "2" ]; then
    # need to create a frame
    # -c $@ with no args just opens the scratch buffer
    emacsclient25 -n -c "$@" && change_focus
else
    # there is already a visible frame besides the daemon, so
    change_focus
    # -n $@ errors if there are no args
    test  "$#" -ne "0" && emacsclient25 -n "$@"
fi
